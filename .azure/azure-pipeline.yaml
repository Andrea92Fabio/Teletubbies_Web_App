trigger:
- "*"

variables:
  FRONTEND_URL_API: 'http://localhost:8081/api/submission'
  FRONTEND_URL_E2E: 'http://localhost:8081'
  BACKEND_URL_API: 'http://localhost:8080/api/submission'
  BACKEND_URL: 'http://localhost:8080'
  TEST_DATA: >
    {"name":"Andrea",
    "surname":"Grossi",
    "gender":"man",
    "email":"xhunterx92@gmail.com",
    "residencyCountry":"italy",
    "fiscalCode":"GRSNRF92L31F205T",
    "residencyZipCode":"20031",
    "residencyAddress":"Via Enrico Berlinguer, 11",
    "shipCountry":"italy",
    "shipZipCode":"20031",
    "shipAddress":"Via Enrico Berlinguer, 11",
    "privacy":true,
    "rules":true,"birthDate":"1992-07-31",
    "phoneNumber":"3408461295",
    "residencyProvince":"MI",
    "shipProvince":"MI"}

jobs:
- job: BuildAndRun
  displayName: 'Build and Run Services'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: tests/setup-services.yaml

- job: IntegrationTests
  displayName: 'Esegui test di integrazione'
  dependsOn: BuildAndRun
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: tests/integration-tests/api-tests.yaml
    - template: tests/integration-tests/e2e-tests.yaml
    
- job: Cleanup
  displayName: 'Cleanup'
  dependsOn: BuildAndRun
  condition: always()
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: docker-compose down
    displayName: 'Stop docker compose'
